---
layout: post
title: Vagrant Virtual Environment on Mac OS X 10.5.x Leopard
tags: [ruby, vagrant, virtualization]
author_name: Joe O'Pecko
author_uri: http://twitter.com/opeckojo
---

I recently got my hands on a surplus Mac mini at my $DAYJOB and wanted to see if I could use it set up "Vagrant":http://vagrantup.com/ on it in order to set up a virtual environment for testing the product I work on. This being my first experience with Vagrant, however, not my first time working with Ruby, I didn't expect too much yak shaving to be involved in getting started.

After getting "Virtualbox":http://www.virtualbox.org in place, I immediately installed the vagrant gem. It was at this time that I was greeted with my first issue:

{% highlight sh %}
mac-mini:~ opeckojo$ sudo gem install vagrant
Building native extensions.  This could take a while...
ERROR: Error installing vagrant:
       ERROR: Failed to build gem native extension.

/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby extconf.rb
can't find header files for ruby.


Gem files will remain installed in /Library/Ruby/Gems/1.8/gems/nokogiri-1.4.1 for inspection.

Results logged to /Library/Ruby/Gems/1.8/gems/nokogiri-1.4.1ext/nokogiri/gem_make.out
{% endhighlight %}

I was working with a new machine so I neglected to install the Xcode tools package. Once this was in place I could get back to installing vagrant.

mac-mini:~ opeckojo$ sudo gem install vagrant
Password:
Building native extensions.  This could take a while...
Building native extensions.  This could take a while...
Successfully installed nokogiri-1.4.1
Successfully installed virtualbox-0.5.4
Successfully installed net-ssh-2.0.20
Successfully installed net-scp-1.0.2
Successfully installed json-1.2.3
Successfully installed trollop-1.15
Successfully installed shoulda-2.10.3
Successfully installed git-style-binaries-0.1.11
Successfully installed archive-tar-minitar-0.5.2
Successfully installed vagrant-0.2.0
10 gems installed

...

Next step was to add a box, i.e. a packaged Vagrant environment. A box is a portable file which can be used to get a virtual up and running quickly. Mitchell Hashimoto has been kind enough to a basic Ubuntu-based box so the next step was to install that.

mac-mini:~ vagrant box add base http://files.vagrantup.com/base.box
HI. You're using libxml2 version 2.6.16 which is over 4 years old and has
plenty of bugs.  We suggest that for maximum HTML/XML parsing pleasure, you
upgrade your version of libxml2 and re-install nokogiri.  If you like using
libxml2 version 2.6.16, but don't like this warning, please define the constant
I_KNOW_I_AM_USING_AN_OLD_AND_BUGGY_VERION_OF_LIBXML@ before requiring nokogiri.

A hasty Ctrl-c to halt anything else and I hit my next issue. Time to upgrade libxml2.

mac-mini:~ opeckojo$ sudo mkdir /usr/local
mac-mini:~ opeckojo$ sudo chmod g+w /usr/local
mac-mini:~ opeckojo$ sudo chgrp staff /usr/local
mac-mini:~ opeckojo$ mkdir tmp
mac-mini:~ opeckojo$ cd tmp
mac-mini:tmp opeckojo$ curl -0 ftp://xmlsoft.org/libxml2/libxml2-2.7.7.tar.gz
mac-mini:tmp opeckojo$ curl -0 ftp://xmlsoft.org/libxml2/libxslt-1.1.26.tar.gz
mac-mini:tmp opeckojo$ tar xzf libxml2-2.7.7.tar.gz
mac-mini:tmp opeckojo$ tar xzf libxslt-1.1.26.tar.gz
mac-mini:tmp opeckojo$ cd libxml2-2.7.7
mac-mini:libxml2-2.7.7 opeckojo$ ./configure
mac-mini:libxml2-2.7.7 opeckojo$ make
mac-mini:libxml2-2.7.7 opeckojo$ make install
mac-mini:libxml2-2.7.7 opeckojo$ cd ../libxslt-1.1.26
mac-mini:libxslt-1.1.26 opeckojo$ ./configure --prefix=/usr/local --with-libxml-prefix=/usr/local --with-libxml-libs-prefix=/usr/local/lib --with-libxml-include-prefix=/usr/local/include
mac-mini:libxslt-1.1.26 opeckojo$ make
mac-mini:libxslt-1.1.26 opeckojo$ make install

Time to fix nokogiri:
mac-mini:~ opeckojo$ sudo gem install nokogiri --with-xml2-include=/usr/local/inslude/libxml2 --with-xml2-lib=/usr/local/lib

Yak shaved successfully; time to play with Vagrant. The "getting started video":http://vimeo.com/9976342 is a great introduction.
